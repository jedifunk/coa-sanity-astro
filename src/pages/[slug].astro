---
import Layout from '../layouts/Layout.astro'
import Sidebar from '../components/Sidebar.astro'
import PostMeta from '../components/PostMeta.astro'
//import PortableText from '../components/PortableText.jsx'
import { PortableText } from 'astro-portabletext'
import PostPagination from '../components/PostPagination.astro'
import {client} from '../lib/sanityClient.js'
import { getSanityImageUrl } from '../lib/helpers.js'
import { Picture } from '@astrojs/image/components'

import AstroImage from '../components/AstroImage.astro'
import AstroQuotation from '../components/AstroQuotation.astro'
import AstroEmbed from '../components/AstroEmbed.astro'
import AstroBreak from '../components/AstroBreak.astro'

import { allPosts } from '../lib/queries.js'

export async function getStaticPaths() {
  const allBlogPosts = await client.fetch(allPosts)

  return allBlogPosts.map(post => ({params: { slug: post.slug.current }, props: {post}}))
}

const { post } = Astro.props

const thisDate = post.publishDate
const nextPage = await client.fetch(`*[_type == "article" && publishDate > "${thisDate}"] | order(publishDate) [0] {title, publishDate, slug}`)
const prevPage = await client.fetch(`*[_type == 'article' && publishDate < "${thisDate}"] | order(publishDate desc) [0] {title, publishDate, slug}`)
---
<Layout title={post.title} type={post._type} description={post.excerpt} image={post.featuredImage} pathname={post.slug.current}>
  <div class="content-area wrapper grid-wrapper grid-main">
    <main id="main" class="site-main" role="main">
      <article
        class={`post type-post status-publish format-standard hentry category-react tag-accessibility tag-gatsby entry`}
      >
        <header class="entry-header">
          
          <PostMeta article={post} />
          <h2 class="entry-title">{post.title}</h2>
          {post.featuredImage && <Picture src={getSanityImageUrl(post.featuredImage).url()} widths={[726]} aspectRatio={16/9} alt={post.featuredImage.alt} />}
        </header>

        <PortableText
          value={post.content}
          components={{
            type: {
              //imageFull: Image,
              image: AstroImage,
              //video: VideoBlock,
              //gallery: GalleryBlock,
              //googleMyMap: MapBlock,
              //instagramPost: InstagramBlock,
              //videoEmbed: VideoEmbedBlock,
              //mapbox: Mapbox,
              quotation: AstroQuotation,
              break: AstroBreak,
              embed: AstroEmbed,
            }
          }}
        />
        
        <!-- <PortableText blocks={post.content} client:load /> -->
        

        {/* <SocialShare
          socialConfig={{
            config: {
              url: `/${data.sanityArticle.slug.current}`,
            },
          }}
          title={data.sanityArticle.title}
          featuredImage={data.sanityArticle.featuredImage && data.sanityArticle.featuredImage}
          twitterHandle={Config.social.twitterHandle}
        /> */}

      </article>

      <PostPagination previous={prevPage} next={nextPage} />
      
    </main>
    <Sidebar />
  </div>
</Layout>