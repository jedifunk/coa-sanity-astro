---
import EleventyFetch from '@11ty/eleventy-fetch'
import { Image } from 'astro:assets'
import { getUnixTime } from 'date-fns'
import { formatBlogPostDate } from '../lib/helpers'

const COA_IG_TOKEN = import.meta.env.PUBLIC_COA_IG_TOKEN

const currentDate = new Date()
var priorDate = new Date(new Date().setDate(currentDate.getDate() - 7))
const priorDateUnix = getUnixTime(priorDate)

async function getIgPosts() {
  const igImgs = `https://graph.instagram.com/me/media?fields=caption,media_url,permalink,timestamp&since=${priorDateUnix}&access_token=${COA_IG_TOKEN}`
  return EleventyFetch(igImgs, {
    duration: '1d',
    type: 'json',
  })
}

const { data } = await getIgPosts()
const d = data.slice(0,9)
---
<section class="widget coa-ig-widget">
  <h3 class="widget-title">Daily Te'Araroa</h3>
  <div class="grid-wrapper glide">
    <div class="glide__track" data-glide-el="track">
      <ul class="glide__slides">
        {data.map(item =>
          item.media_url && (
            <li class='glide__slide'>
              <figure class="slide-wrapper">
                <a href={item.permalink} target="_blank" rel="noopener noreferrer">
                  <Image src={item.media_url} width={375} height={375} alt={item.caption} />
                </a>
                <figcaption><strong>{formatBlogPostDate(item.timestamp)}</strong> | {item.caption}</figcaption>
              </figure>
            </li>
          )
        )}
      </ul>
    </div>
    <div class="glide__arrows" data-glide-el="controls">
      <button class="glide__arrow glide__arrow--left" data-glide-dir="<"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M16.67 0l2.83 2.829-9.339 9.175 9.339 9.167-2.83 2.829-12.17-11.996z"/></svg></button>
      <button class="glide__arrow glide__arrow--right" data-glide-dir=">"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M5 3l3.057-3 11.943 12-11.943 12-3.057-3 9-9z"/></svg></button>
    </div>
  </div>
</section>
<script>
import Glide, {Controls, Swipe} from '@glidejs/glide/dist/glide.modular.esm'
new Glide('.glide').mount({Controls, Swipe})

</script>
<style>
.glide {
  position: relative;
  width: 100%;
  box-sizing: border-box;
}
.glide * {
  box-sizing: inherit;
}
.glide__track {
  overflow: hidden;
}
.glide__slides {
  position: relative;
  width: 100%;
  list-style: none;
  backface-visibility: hidden;
  transform-style: preserve-3d;
  touch-action: pan-Y;
  overflow: hidden;
  margin: 0;
  padding: 0;
  white-space: nowrap;
  display: flex;
  flex-wrap: nowrap;
  will-change: transform;
}
.glide__slides--dragging {
  user-select: none;
}
.glide__slide {
  width: 100%;
  height: 100%;
  flex-shrink: 0;
  white-space: normal;
  user-select: none;
  -webkit-touch-callout: none;
  -webkit-tap-highlight-color: transparent;
}
.glide__slide a {
  user-select: none;
  -webkit-user-drag: none;
  -moz-user-select: none;
  -ms-user-select: none;
}
.glide__arrows {
  -webkit-touch-callout: none;
  user-select: none;
  position: absolute;
  top: 20px;
  right: 10px;
  display: flex;
  gap: .5rem;
}

/* Theme */
.glide__arrow {
  /* position: absolute; */
  display: block;
  /* top: 20px; */
  z-index: 2;
  /* color: rgba(255,255,255,.5); */
  text-transform: uppercase;
  border: none;
  border-radius: 50%; 
  background-color: transparent;
  opacity: 1;
  cursor: pointer;
  transition: opacity 150ms ease, border 300ms ease-in-out;
  transform: translateY(-50%);
  line-height: 1;
  padding: 0;
  margin: 0;
}
.glide__arrow:focus {
  outline: none;
}
.glide__arrow:hover {
  border-color: white;
}
/* .glide__arrow--left {
  left: 5px;
}
.glide__arrow--right {
  right: 5px;
} */
/* .slider-icon {
  width: 1.5rem;
  height: 1.5rem;
} */
.glide__arrow--disabled {
  opacity: 0.33;
}
.glide--swipeable {
  cursor: grab;
  cursor: -moz-grab;
  cursor: -webkit-grab;
}
.glide--dragging {
  cursor: grabbing;
  cursor: -moz-grabbing;
  cursor: -webkit-grabbing;
}
.glide__arrow > svg {
  fill: rgba(255,255,255,1);
  background-color: hsla(var(--h) var(--s) var(--l) / .5);
  border-radius: 5px;
  padding: 5px;
  width: 18px;
  height: 18px;
}
/* .slide-wrapper > figcaption {
  text-align: center;
} */
</style>