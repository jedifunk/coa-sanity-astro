---
import GalleryBlock from "./GalleryBlock"
//import LightboxJS from './Lightbox'
import { getSanityImageUrl } from '../lib/helpers.js'
import { Picture } from '@astrojs/image/components'
import { Icon } from 'astro-icon'

const props = Astro.props
const cols = (props.node.columns != null) ? props.node.columns : 3
---
<!-- <script>
import { isLightboxOpen, photoIndex } from '../lib/helpers'

  const $isLightboxOpen = isLightboxOpen.get()

  const galleries = document.querySelectorAll('.blocks-gallery-grid')

  // galleries.forEach(gallery => {
  //   const btns = gallery.querySelectorAll('button')

  //   btns.forEach((btn, index) => {
  //     btn.addEventListener('click', () => {
  //       photoIndex.set(index)
  //       isLightboxOpen.set(!$isLightboxOpen)
  //     })
  //   })
  // })

  for (const [index, gallery] of galleries.entries()) {
    
    const btns = gallery.querySelectorAll('button')

    for (const [index, btn] of btns.entries()) {
      
      btn.addEventListener('click', () => {
        photoIndex.set(index)
        isLightboxOpen.set(!$isLightboxOpen)
        
      })
    }
  }

</script> -->

<GalleryBlock value={props.node} client:load />

<!-- <div class={`blocks-gallery-grid columns-${cols}`}>
  {props.node.images.map(img => {

    return(
      <figure class="blocks-gallery-item">
        <button>
          <Icon name='icon-park:expand-text-input' />
          <Picture src={getSanityImageUrl(img).width(726).quality(75).auto('format').url()} widths={[500,726]} aspectRatio={3/4} alt={img.alt} />
          {img.caption && <figcaption>{img.caption}</figcaption>}
        </button>
      </figure>
    )
  })}
</div> -->

<!-- <LightboxJS value={props.node} client:idle /> -->