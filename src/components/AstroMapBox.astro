---
import { useSanityClient } from "@sanity/astro"
const props = Astro.props

// get map ID & query for its details
const mapID = props.node.map._ref
const mapQuery = `*[_type == 'map' && _id == '${mapID}']{..., location[]->{name, country->{name}, city->{name}, description, geometry{...}}}`
const map = await useSanityClient().fetch(mapQuery)
const locations = JSON.stringify(map[0].location)
---
<div class="map-wrapper">
  <nav id="map-toggles" class="map-toggles"></nav>
  <div id="map" class="map" data-locations={locations}></div>
  <figcaption>{map[0].name}</figcaption>
</div>
<script>
import * as maps from '../lib/maps'

const element = document.getElementById('map')
const locations = JSON.parse(element.dataset.locations)

async function orchestrate() {
  const map = await maps.initializeMap()
  await maps.convertPlaces(locations, map)
}
orchestrate()
</script>